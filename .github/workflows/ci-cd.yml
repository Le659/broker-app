name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - 'feature/**'
  pull_request:
    branches:
      - '**'

jobs:
  test:
    name: 🧪 Test & Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: api
    strategy:
      matrix:
        node-version: [20.x]        # ← Atualizado para Node ≥ 20.11
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'             # evita Yarn “env details” no root

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Lint 🧐
        run: |
          if yarn run lint > /dev/null 2>&1; then
            yarn lint
          else
            echo "skip lint — script não existe"
          fi

      - name: Check formatting
        run: |
          if yarn run format:check > /dev/null 2>&1; then
            yarn format:check
          else
            echo "skip format:check — script não existe"
          fi

      - name: Build 🔨
        run: yarn build

      - name: Unit & controller tests ✅
        run: yarn test --ci

      - name: e2e tests 🚀
        run: yarn test:e2e

  docker:
    name: 🐋 Build & Push Docker Image
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU (multi-arch)
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: ./api
          file: ./api/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/broker-app-api:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/broker-app-api:${{ github.sha }}

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        with:
          args: test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
